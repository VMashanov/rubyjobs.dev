# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/hanami-pagination/all/hanami-pagination.rbi
#
# hanami-pagination-02acc43584dc
module Hanami
end
module Hanami::Pagination
end
module Hanami::Pagination::View
  def current_page_tag; end
  def ellipsis_tag; end
  def first_page_tag(page); end
  def last_page_tag(page); end
  def n_page_path(page, n); end
  def next_page_path(page); end
  def next_page_tag(page); end
  def next_page_url; end
  def page_url(page); end
  def paginate(page); end
  def prev_page_url; end
  def previous_page_path(page); end
  def previous_page_tag(page); end
  def routes; end
  include Hanami::Helpers
  include Hanami::Helpers::EscapeHelper
  include Hanami::Helpers::FormHelper
  include Hanami::Helpers::HtmlHelper
  include Hanami::Helpers::LinkToHelper
  include Hanami::Helpers::NumberFormattingHelper
  include Hanami::Helpers::RoutingHelper
end
class Hanami::Pagination::Pager
  def all_pages; end
  def current_page; end
  def current_page?(page); end
  def first_page?; end
  def initialize(pager); end
  def last_page?; end
  def next_page; end
  def pager; end
  def pages_range(delta: nil); end
  def prev_page; end
  def total; end
  def total_pages; end
end
module Hanami::Pagination::Action
  def all_for_page(relation); end
  def limit; end
  def self.included(action); end
end
class Hanami::Repository < ROM::Repository::Root
  def self.enable_pagination!; end
end
class Hanami::Pagination::MockPager
  def current_page; end
  def first_page?; end
  def initialize(current_page, total_pages); end
  def last_page?; end
  def next_page; end
  def prev_page; end
  def total; end
  def total_pages; end
end
